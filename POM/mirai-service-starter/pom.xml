<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns="http://maven.apache.org/POM/4.0.0"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.4.5</version>
		<relativePath/>
	</parent>
	<groupId>com.example.mirai.services</groupId>
	<artifactId>mirai-service-starter</artifactId>
	<version>1.1.1</version>
	<packaging>pom</packaging>

	<properties>
		<java.version>11</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<jib-maven-plugin.version>3.0.0</jib-maven-plugin.version>
		<hibernate-types-52.version>2.3.4</hibernate-types-52.version>
		<shedlock.version>4.15.1</shedlock.version>
		<testcontainers.version>1.15.2</testcontainers.version>
		<mirai-libraries-core.version>1.1.0-SNAPSHOT</mirai-libraries-core.version>
		<mirai-libraries-entity.version>1.0.1</mirai-libraries-entity.version>
		<mirai-libraries-cache.version>1.0.0</mirai-libraries-cache.version>
		<mirai-libraries-audit.version>1.0.0</mirai-libraries-audit.version>
		<mirai-libraries-event.version>1.0.2</mirai-libraries-event.version>
		<mirai-libraries-security.version>1.0.1</mirai-libraries-security.version>
		<mirai-libraries-jackson.version>1.0.0</mirai-libraries-jackson.version>
		<mirai-libraries-web-security.version>1.2.0</mirai-libraries-web-security.version>
	</properties>

	<dependencies>
		<!-- Mirai Library Set -->
		<dependency>
			<groupId>com.example.mirai.libraries</groupId>
			<artifactId>core</artifactId>
			<version>${mirai-libraries-core.version}</version>
		</dependency>
		<dependency>
			<groupId>com.example.mirai.libraries</groupId>
			<artifactId>entity</artifactId>
			<version>${mirai-libraries-entity.version}</version>
		</dependency>
		<dependency>
			<groupId>com.example.mirai.libraries</groupId>
			<artifactId>cache</artifactId>
			<version>${mirai-libraries-cache.version}</version>
		</dependency>
		<dependency>
			<groupId>com.example.mirai.libraries</groupId>
			<artifactId>audit</artifactId>
			<version>${mirai-libraries-audit.version}</version>
		</dependency>
		<dependency>
			<groupId>com.example.mirai.libraries</groupId>
			<artifactId>event</artifactId>
			<version>${mirai-libraries-event.version}</version>
		</dependency>
		<dependency>
			<groupId>com.example.mirai.libraries</groupId>
			<artifactId>security</artifactId>
			<version>${mirai-libraries-security.version}</version>
		</dependency>

		<!-- Custom Jackson configuration -->
		<dependency>
			<groupId>com.example.mirai.libraries</groupId>
			<artifactId>jackson</artifactId>
			<version>${mirai-libraries-jackson.version}</version>
		</dependency>

		<!-- Enforce Web-Security on HTTP Endpoints -->
		<dependency>
			<groupId>com.example.mirai.libraries</groupId>
			<artifactId>web-security</artifactId>
			<version>${mirai-libraries-web-security.version}</version>
		</dependency>

		<!-- Support for Web Service development -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Autogenerate boilerplate code: constructors, getters, setters, etc. -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Support for Spring Boot Admin and Kubernetes Health & Liveliness checks -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!-- Support own Metadata definitions using the Annotation Processor -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- Used for custom Spring Annotations -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>

		<!-- Testing -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- Enable support for Test Container usage in tests -->
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<version>${testcontainers.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Enable PostgreSQL Test Container support in tests -->
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
			<version>${testcontainers.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Enable support for flexible expressions of intent in tests -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- JPA -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- The Hibernate Types support for JSON column mapping-->
		<dependency>
			<groupId>com.vladmihalcea</groupId>
			<artifactId>hibernate-types-52</artifactId>
			<version>${hibernate-types-52.version}</version>
		</dependency>

		<!-- Liquibase -->
		<dependency>
			<groupId>org.liquibase</groupId>
			<artifactId>liquibase-core</artifactId>
		</dependency>

		<!-- Managing schedulers on multiple instances of the application-->
		<dependency>
			<groupId>net.javacrumbs.shedlock</groupId>
			<artifactId>shedlock-spring</artifactId>
			<version>${shedlock.version}</version>
		</dependency>
		<dependency>
			<groupId>net.javacrumbs.shedlock</groupId>
			<artifactId>shedlock-provider-jdbc-template</artifactId>
			<version>${shedlock.version}</version>
		</dependency>

		<!-- Enable support for validation annotations such as @Min, @Max, @NotNull, etc. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<!-- Enable support for Jackson core transformation functionality such as ObjectMapper -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
		</dependency>

		<!-- Enable support for Jackson transformation annotations such as @JsonIgnore -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- Enables build of Docker images without Docker Daemon -->
			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<version>${jib-maven-plugin.version}</version>
			</plugin>

			<!-- Enable Integration Tests support using FailSafe -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Disable Unit Tests support using SureFire -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!-- Disable unit tests -->
					<skip>true</skip>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
