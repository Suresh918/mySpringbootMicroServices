create queue com.example.mirai.projectname.notificationservice.notification
create jndiname com.example.mirai.projectname.notificationservice.notification queue com.example.mirai.projectname.notificationservice.notification
grant queue com.example.mirai.projectname.notificationservice.notification user=projectname all

delete bridge source=topic:com.example.mirai.projectname.reviewservice.review target=queue:com.example.mirai.projectname.notificationservice.notification
delete bridge source=topic:com.example.mirai.projectname.reviewservice.reviewtask target=queue:com.example.mirai.projectname.notificationservice.notification
delete bridge source=topic:com.example.mirai.projectname.reviewservice.reviewentry target=queue:com.example.mirai.projectname.notificationservice.notification

create bridge source=topic:com.example.mirai.projectname.reviewservice.review target=queue:com.example.mirai.projectname.notificationservice.notification selector="entity='com.example.mirai.projectname.reviewservice.review.model.Review' and type in ('CREATE-AGGREGATE','STARTVALIDATION','COMPLETE')"
create bridge source=topic:com.example.mirai.projectname.reviewservice.reviewtask target=queue:com.example.mirai.projectname.notificationservice.notification selector="entity='com.example.mirai.projectname.reviewservice.reviewtask.model.ReviewTask' and type in ('CREATE','MERGE','DELETE','DUE-DATE-SOON','DUE-DATE-EXPIRED', 'COMPLETE')"
create bridge source=topic:com.example.mirai.projectname.reviewservice.reviewentry target=queue:com.example.mirai.projectname.notificationservice.notification selector="entity='com.example.mirai.projectname.reviewservice.reviewentry.model.ReviewEntry' and type in ('CREATE','COMPLETE')"

create topic com.example.mirai.projectname.notificationservice.notification.inapp
create jndiname com.example.mirai.projectname.notificationservice.notification.inapp topic com.example.mirai.projectname.notificationservice.notification.inapp
addprop topic com.example.mirai.projectname.notificationservice.notification.inapp global
grant topic com.example.mirai.projectname.notificationservice.notification.inapp user=EMS-SERVER all

create bridge source=topic:com.example.mirai.projectname.userservice.profile target=queue:com.example.mirai.projectname.notificationservice.notification selector="entity='com.example.mirai.projectname.userservice.profile.Profile' and type in ('PROFILE-CREATED')"

create bridge source=topic:com.example.mirai.projectname.notificationservice.settings target=queue:com.example.mirai.projectname.notificationservice.user-settings selector="entity='Settings' and type in ('DELEGATE-ADDED')"

create bridge source=topic:com.example.mirai.projectname.notificationservice.settings target=queue:com.example.mirai.projectname.notificationservice.user-settings selector="entity='Settings' and type in ('DELEGATE-REMOVED')"

create queue com.example.mirai.projectname.notificationservice.changerequest
create jndiname com.example.mirai.projectname.notificationservice.changerequest queue com.example.mirai.projectname.notificationservice.changerequest
grant queue com.example.mirai.projectname.notificationservice.changerequest user=projectname all



create bridge source=topic:com.example.mirai.projectname.changerequestservice.changerequest target=queue:com.example.mirai.projectname.notificationservice.changerequest selector="entity='com.example.mirai.projectname.changerequestservice.changerequest.model.ChangeRequest' and type in ('SUBMIT','DEFINE_SOLUTION','ANALYZE_IMPACT','APPROVE','REJECT','OBSOLETE','CLOSE','REDRAFT','RESUBMIT','REDEFINE_SOLUTION','REANALYZE_IMPACT')"

create bridge source=topic:com.example.mirai.projectname.releasepackageservice.releasepackage target=queue:com.example.mirai.projectname.notificationservice.notification selector="entity='com.example.mirai.projectname.releasepackageservice.releasepackage.model.ReleasePackage' and type in ('SUBMIT','CREATE','RECREATE','READY','REREADY','RELEASED','CLOSED','OBSELETE')"
create bridge source=topic:com.example.mirai.projectname.releasepackageservice.reviewupdate target=queue:com.example.mirai.projectname.notificationservice.notification selector="entity='com.example.mirai.projectname.releasepackageservice.releasepackage.model.ReleasePackage' and type in ('REVIEWUPDATE')"
create bridge source=topic:com.example.mirai.projectname.releasepackageservice.automaticclosure target=queue:com.example.mirai.projectname.notificationservice.notification selector="entity='com.example.mirai.projectname.releasepackageservice.releasepackage.model.dto.AutomaticClosure' and type ='AUTOMATIC-CLOSURE'"

create bridge source=topic:com.example.mirai.services.userservice.profile.lastloggedinreport target=queue:com.example.mirai.projectname.notificationservice.lastloggedinreport selector="entity='com.example.mirai.projectname.userservice.profile.Profile' and type in ('LAST-LOGGED-IN-REPORT')"
